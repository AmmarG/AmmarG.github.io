topojson=function(){function t(t,n){var r={type:"Feature",id:n.id,properties:n.properties||{},geometry:e(t,n)};return null==n.id&&delete r.id,r}function e(t,e){function n(t,e){e.length&&e.pop();for(var n,r=p[t<0?~t:t],o=0,a=r.length,i=0,u=0;o<a;++o)e.push([(i+=(n=r[o])[0])*s+l,(u+=n[1])*f+d]);t<0&&function(t,e){var n,r=t.length,o=r-e;for(;o<--r;)n=t[o],t[o++]=t[r],t[r]=n}(e,a)}function r(t){return[t[0]*s+l,t[1]*f+d]}function o(t){for(var e=[],r=0,o=t.length;r<o;++r)n(t[r],e);return e.length<2&&e.push(e[0]),e}function a(t){for(var e=o(t);e.length<4;)e.push(e[0]);return e}function i(t){return t.map(a)}function u(t){var e=t.type;return"GeometryCollection"===e?{type:e,geometries:t.geometries.map(u)}:e in h?{type:e,coordinates:h[e](t)}:null}var c=t.transform,s=c.scale[0],f=c.scale[1],l=c.translate[0],d=c.translate[1],p=t.arcs,h={Point:function(t){return r(t.coordinates)},MultiPoint:function(t){return t.coordinates.map(r)},LineString:function(t){return o(t.arcs)},MultiLineString:function(t){return t.arcs.map(o)},Polygon:function(t){return i(t.arcs)},MultiPolygon:function(t){return t.arcs.map(i)}};return u(e)}function n(t,e){for(var n=0,r=t.length;n<r;){var o=n+r>>>1;t[o]<e?n=o+1:r=o}return n}return{version:"1.1.3",mesh:function(t,n,r){function o(t){t<0&&(t=~t),(f[t]||(f[t]=[])).push(s)}function a(t){t.forEach(o)}function i(t){t.forEach(a)}function u(t){"GeometryCollection"===t.type?t.geometries.forEach(u):t.type in l&&(s=t,l[t.type](t.arcs))}var c=[];if(arguments.length>1){var s,f=[],l={LineString:a,MultiLineString:i,Polygon:i,MultiPolygon:function(t){t.forEach(i)}};u(n),f.forEach(arguments.length<3?function(t,e){c.push(e)}:function(t,e){r(t[0],t[t.length-1])&&c.push(e)})}else for(var d=0,p=t.arcs.length;d<p;++d)c.push(d);return e(t,{type:"MultiLineString",arcs:function(t,e){function n(e){var n=t.arcs[e],r=n[0],o=[0,0];return n.forEach(function(t){o[0]+=t[0],o[1]+=t[1]}),[r,o]}var r={},o={},a={};e.forEach(function(t){var e=n(t);(r[e[0]]||(r[e[0]]=[])).push(t),(r[e[1]]||(r[e[1]]=[])).push(~t)}),e.forEach(function(t){var e,r,i=n(t),u=i[0],c=i[1];if(e=a[u])if(delete a[e.end],e.push(t),e.end=c,r=o[c]){delete o[r.start];var s=r===e?e:e.concat(r);o[s.start=e.start]=a[s.end=r.end]=s}else(r=a[c])?(delete o[r.start],delete a[r.end],s=e.concat(r.map(function(t){return~t}).reverse()),o[s.start=e.start]=a[s.end=r.start]=s):o[e.start]=a[e.end]=e;else if(e=o[c])if(delete o[e.start],e.unshift(t),e.start=u,r=a[u]){delete a[r.end];var f=r===e?e:r.concat(e);o[f.start=r.start]=a[f.end=e.end]=f}else(r=o[u])?(delete o[r.start],delete a[r.end],f=r.map(function(t){return~t}).reverse().concat(e),o[f.start=r.end]=a[f.end=e.end]=f):o[e.start]=a[e.end]=e;else(e=o[u])?(delete o[e.start],e.unshift(~t),e.start=c,(r=a[c])?(delete a[r.end],f=r===e?e:r.concat(e),o[f.start=r.start]=a[f.end=e.end]=f):(r=o[c])?(delete o[r.start],delete a[r.end],f=r.map(function(t){return~t}).reverse().concat(e),o[f.start=r.end]=a[f.end=e.end]=f):o[e.start]=a[e.end]=e):(e=a[c])?(delete a[e.end],e.push(~t),e.end=u,(r=a[u])?(delete o[r.start],s=r===e?e:e.concat(r),o[s.start=e.start]=a[s.end=r.end]=s):(r=o[u])?(delete o[r.start],delete a[r.end],s=e.concat(r.map(function(t){return~t}).reverse()),o[s.start=e.start]=a[s.end=r.start]=s):o[e.start]=a[e.end]=e):o[(e=[t]).start=u]=a[e.end=c]=e});var i=[];for(var u in a)i.push(a[u]);return i}(t,c)})},feature:function(e,n){return"GeometryCollection"===n.type?{type:"FeatureCollection",features:n.geometries.map(function(n){return t(e,n)})}:t(e,n)},neighbors:function(t){function e(t,e){t.forEach(function(t){t<0&&(t=~t);var r=a[t]||(a[t]=[]);r[e]||(r.forEach(function(t){var r,o;o=n(r=i[e],t),r[o]!==t&&r.splice(o,0,t),o=n(r=i[t],e),r[o]!==e&&r.splice(o,0,e)}),r[e]=e)})}function r(t,n){t.forEach(function(t){e(t,n)})}function o(t,e){"GeometryCollection"===t.type?t.geometries.forEach(function(t){o(t,e)}):t.type in u&&u[t.type](t.arcs,e)}var a=[],i=t.map(function(){return[]}),u={LineString:e,MultiLineString:r,Polygon:r,MultiPolygon:function(t,e){t.forEach(function(t){r(t,e)})}};return t.forEach(o),i}}}();