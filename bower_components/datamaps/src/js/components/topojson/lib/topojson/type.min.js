module.exports=function(t){for(var e in typeDefaults)e in t||(t[e]=typeDefaults[e]);return t.defaults=typeDefaults,t};var typeDefaults={Feature:function(t){t.geometry&&this.geometry(t.geometry)},FeatureCollection:function(t){for(var e=t.features,n=-1,o=e.length;++n<o;)this.Feature(e[n])},GeometryCollection:function(t){for(var e=t.geometries,n=-1,o=e.length;++n<o;)this.geometry(e[n])},LineString:function(t){this.line(t.coordinates)},MultiLineString:function(t){for(var e=t.coordinates,n=-1,o=e.length;++n<o;)this.line(e[n])},MultiPoint:function(t){for(var e=t.coordinates,n=-1,o=e.length;++n<o;)this.point(e[n])},MultiPolygon:function(t){for(var e=t.coordinates,n=-1,o=e.length;++n<o;)this.polygon(e[n])},Point:function(t){this.point(t.coordinates)},Polygon:function(t){this.polygon(t.coordinates)},object:function(t){return null==t?null:typeObjects.hasOwnProperty(t.type)?this[t.type](t):this.geometry(t)},geometry:function(t){return null==t?null:typeGeometries.hasOwnProperty(t.type)?this[t.type](t):null},point:function(){},line:function(t){for(var e=-1,n=t.length;++e<n;)this.point(t[e])},polygon:function(t){for(var e=-1,n=t.length;++e<n;)this.line(t[e])}},typeGeometries={LineString:1,MultiLineString:1,MultiPoint:1,MultiPolygon:1,Point:1,Polygon:1,GeometryCollection:1},typeObjects={Feature:1,FeatureCollection:1};